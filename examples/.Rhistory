Fmsy=TeX("Productivtiy $(F^{MSY})$"),
c1 =TeX("Stock dep. costs $(c_1)$"),
sigma_p=TeX("Passive obs. error $(\\sigma^{p})$"),
NCV_weight=TeX("Eco. importance $(\\omega_{NCV})$"),
buffer = TeX("Buffer $(\\beta$)"),
sigma_a=TeX("Active obs. error $(\\sigma^{a})$"),
tau=TeX("Growth rate var. $(\\tau)$"),
Bhat=TeX("Estimated B. $(\\hat{B}_{t})$"),
CV = TeX("Uncertianty $(CV_t)$"),
c2 =TeX("Harvest risk ave. $(c_2)$"),
NCVshape = TeX("Eco. Imp. risk ave. $(b)$")))
pal = PNWColors::pnw_palette(name="Bay",n=13)
library(grid)
# defining the breaks function,
# s is the scaling factor (cf. multiplicative expand)
equal_breaks <- function(n = 3, s = 0.05, ...){
function(x){
# rescaling
d <- s * diff(range(x)) / (1+2*s)
round(seq(min(x)+d, max(x)-d, length=n),
digits = round(max(-log(max(x),10)+1, 1))
)
}
}
p <- ggplot(plot_data,
aes(x = value,y =yhat,color=variable))+
geom_line(size=1.5)+theme_classic()+
facet_wrap(~variable,scales = "free_x",
labeller = label_parsed)+
scale_color_manual(values=pal)+
scale_x_continuous(breaks=equal_breaks(n=3, s=0.125),
expand = c(0.125, 0.0)) +
xlab("Parameter value")+ylab("VoI")+
theme(legend.position="none",
axis.title = element_text(size = 24),
axis.text = element_text(size = 18),
strip.text = element_text(size = 13))
p
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/total_VoI_partial_dependence.png",
p,height  = 8.0, width =9.0)
names <- c("Fmsy","buffer","tau","sigma_a","sigma_p","H_weight",
"NCV_weight","c1","c2","NCVshape","discount",
"Bhat","CV")
global_sensetivity_data <- sensetivity_analysis(model,names)
p <- ggplot(global_sensetivity_data,
aes(x=original,
y=parameters,
xmin=0,
xmax=original,
color=Metric,
group =Metric,
xend=original))+
geom_linerange(color="black",position = position_dodge(width = 0.50))+
geom_point(size=3,position = position_dodge(width = 0.50))+
scale_color_manual(values=PNWColors::pnw_palette(name="Lake",n=2))+
scale_y_discrete(labels = c(Fmsy=TeX("Productivtiy $(F^{MSY})$"),
buffer = TeX("Buffer $(\\beta$)"),
tau=TeX("Growth rate var. $(\\tau)$"),
sigma_a=TeX("Active obs. error $(\\sigma^{a})$"),
sigma_p=TeX("Passive obs. error $(\\sigma^{p})$"),
H_weight=TeX("Fishery importance $(\\omega_{H})$"),
NCV_weight=TeX("Ecosystem importance $(\\omega_{NCV})$"),
c1 =TeX("Stock dep. costs $(c_1)$"),
c2 =TeX("Harvest risk aversion $(c_2)$"),
NCVshape = TeX("Eco. Imp. risk aversion $(b)$"),
discount=TeX("Discount rate $(d)$"),
Bhat=TeX("Estimated biomass $(\\hat{B}_{t})$"),
CV = TeX("Uncertianty $(CV_t)$")),
limits = factor(rev(c("discount","H_weight","Fmsy","c1",
"sigma_p","NCV_weight","buffer","sigma_a",
"tau","Bhat","CV"
,"c2","NCVshape")))
)+
geom_vline(aes(xintercept=0),color="black",lty=2)+
theme_classic()+
xlab("Global Sensetivity")+
ylab("Parameter")+
theme(axis.title = element_text(size = 24),
axis.text = element_text(size = 18),
legend.position = c(0.7, 0.5),
legend.title= element_text(size = 24),
legend.text = element_text(size = 18))
p
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/total_VoI_sensetivity.png",
p,height = 8.0, width =8.5)
global_sensetivity_data
global_sensetivity_data %>%
filter(Metric == "First order")%>%
select(parameters,original)
source("~/github/KalmanFilterPOMDPs/examples/VoI_predict_model2.R")
file <- "~/github/KalmanFilterPOMDPs/FARM/data/VoI.csv"
col_names <- c("Fmsy","Buffer","tau","sigma_a",
"sigma_p","H_weight","NCV_weight",
"c1","c2","NCVshape","discount","Bhat","CV","VoI")
results <- load_VoI_data(file,col_names,p=1.0)
log(nrow(results$dat),2)
data <- results$dat
nrow(data)
results$ranges
# ggplot(data%>%filter(VoI > 0),aes(y=VoI,x=CV))+
#   geom_point()
ranges <- results$range
results <- fit_VoI_model(data,interaction.depth = 7)
model <- results$model
testing <- results$testing
training <- results$training
plt <- VoI_model_performance(model,results$testing[1:1000,])
plt$performance
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/VoI_approx_performance.png",
plt$performance,height  = 9.5, width =9)
plot_data <- collect_partial_dependence_data(model,col_names[1:13],ranges)
levels(plot_data$variable) <- c(
Fmsy=TeX("Productivtiy $(F^{MSY})$"), buffer = TeX("Buffer $(\\beta$)"),
tau=TeX("Growth rate var. $(\\tau)$"),sigma_a=TeX("Active obs. error $(\\sigma^{a})$"),
sigma_p=TeX("Passive obs. error $(\\sigma^{p})$"), H_weight=TeX("Fishery importance $(\\omega_{H})$"),
NCV_weight=TeX("Eco. importance $(\\omega_{NCV})$"),c1 =TeX("Stock dep. costs $(c_1)$"),
c2 =TeX("Harvest risk ave. $(c_2)$"),NCVshape = TeX("Eco. Imp. risk ave. $(b)$"),
discount=TeX("Discount rate $(d)$"),Bhat=TeX("Estimated B. $(\\hat{B}_{t})$"),
CV = TeX("Uncertianty $(CV_t)$"))
plot_data$variable <- ordered(plot_data$variable,c(CV = TeX("Uncertianty $(CV_t)$"),Bhat=TeX("Estimated B. $(\\hat{B}_{t})$"),
H_weight=TeX("Fishery importance $(\\omega_{H})$"),Fmsy=TeX("Productivtiy $(F^{MSY})$"),
c1 =TeX("Stock dep. costs $(c_1)$"),sigma_p=TeX("Passive obs. error $(\\sigma^{p})$"),
buffer = TeX("Buffer $(\\beta$)"),NCV_weight=TeX("Eco. importance $(\\omega_{NCV})$"),
sigma_a=TeX("Active obs. error $(\\sigma^{a})$"),tau=TeX("Growth rate var. $(\\tau)$"),
c2 =TeX("Harvest risk ave. $(c_2)$"),discount=TeX("Discount rate $(d)$"),NCVshape = TeX("Eco. Imp. risk ave. $(b)$")))
pal = PNWColors::pnw_palette(name="Bay",n=13)
library(grid)
# defining the breaks function,
# s is the scaling factor (cf. multiplicative expand)
equal_breaks <- function(n = 3, s = 0.05, ...){
function(x){
# rescaling
d <- s * diff(range(x)) / (1+2*s)
round(seq(min(x)+d, max(x)-d, length=n),
digits = round(max(-log(max(x),10)+1, 1))
)
}
}
p <- ggplot(plot_data,
aes(x = value,y =yhat,color=variable))+
geom_line(size=1.5)+theme_classic()+
facet_wrap(~variable,scales = "free_x",
labeller = label_parsed)+
scale_color_manual(values=pal)+
scale_x_continuous(breaks=equal_breaks(n=3, s=0.125),
expand = c(0.125, 0.0)) +
xlab("Parameter value")+ylab("VoI")+
theme(legend.position="none",
axis.title = element_text(size = 24),
axis.text = element_text(size = 18),
strip.text = element_text(size = 13))
p
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/VoI_partial_dependence_new.png",
p,height  = 8.0, width =9.0)
names <- c("Fmsy","Buffer","tau","sigma_a","sigma_p","H_weight",
"NCV_weight","c1","c2","NCVshape","discount",
"Bhat","CV")
global_sensetivity_data <- sensetivity_analysis(model,names)
global_sensetivity_data %>%
filter(Metric == "First order")%>%
select(parameters,original)
7.4*10^-2
8.4*10^-3
########## assessment frequency ###############
source("~/github/KalmanFilterPOMDPs/examples/VoI_predict_model2.R")
file <- "~/github/KalmanFilterPOMDPs/FARM/data/assessment_frequency.csv"
col_names <- c("Fmsy","buffer","tau","sigma_a","sigma_p","H_weight","NCV_weight",
"c1","c2","NCVshape","discount","frequency")
data <- load_frequency_data(file,col_names)
model_results <- fit_frequency_model(data$data,ntree = 1000,interaction.depth = 12,shrinkage = 0.025,p = 0.9)
model <- model_results$model
testing <- model_results$testing
training <- model_results$training
training <- model_results$training
performance <- frequency_model_performance(model_results$model,model_results$testing)
performance$plot
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/frequency_approx_performance.png",
performance$plot,height  = 9.5, width =9)
variable_names <- c("Fmsy","buffer","tau","sigma_a","sigma_p",
"H_weight","NCV_weight","c1","c2",
"NCVshape","discount")
partial_dependence_data <- collect_partial_dependence_data(
model_results$model,variable_names,data$ranges)
partial_dependence_data %>%
group_by(variable)%>%
summarize(min_ = min(value),max_ = max(value))
global_sensetivity_data <- sensetivity_analysis(model_results$model,
variable_names)
global_sensetivity_data %>%
filter(Metric == "First order")%>%
select(parameters,original)
source("~/github/KalmanFilterPOMDPs/examples/VoI_predict_model2.R")
file <- "~/github/KalmanFilterPOMDPs/FARM/data/VoI.csv"
col_names <- c("Fmsy","Buffer","tau","sigma_a",
"sigma_p","H_weight","NCV_weight",
"c1","c2","NCVshape","discount","Bhat","CV","VoI")
results <- load_VoI_data(file,col_names,p=1.0)
log(nrow(results$dat),2)
data <- results$dat
nrow(data)
results$ranges
# ggplot(data%>%filter(VoI > 0),aes(y=VoI,x=CV))+
#   geom_point()
ranges <- results$range
results <- fit_VoI_model(data,interaction.depth = 7)
model <- results$model
testing <- results$testing
training <- results$training
plt <- VoI_model_performance(model,results$testing[1:1000,])
plt$performance
ggsave(file ="~/github/KalmanFilterPOMDPs/examples/figures/VoI_approx_performance.png",
plt$performance,height  = 9.5, width =9)
plt$performance
dat < -read.csv("~/github/RMIS data/ExpectedAnglersMetric/2018.csv")
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/2018.csv")
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
dat$tagged_adclipped
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
dat %>% select(tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = "tag_code_or_release_id")
d <- dat %>% select(tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = "tag_code_or_release_id") %>%
group_by(tag_code_or_release_id)%>%
mutate(n = sum(value))%>%
mutate(p = value / n)
ggplot(d,aes(x = p, fill = variable))+
goem_density()
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_density()
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_density(alpha = 0.3)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat$ %>% select(tag_code_or_release_id,tagged_adclipped,
d <- dat %>% select(tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = "tag_code_or_release_id") %>%
group_by(tag_code_or_release_id)%>%
mutate(n = sum(value))%>%
ungroup()%>%
mutate(p = value / n)
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% select(species,hatchery_location_code,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = "tag_code_or_release_id") %>%
group_by(species,hatchery_location_code,run)%>%
mutate(n = sum(value))%>%
ungroup()%>%
mutate(p = value / n)
d <- dat %>% select(species,hatchery_location_code,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,hatchery_location_code,run)%>%
mutate(n = sum(value))%>%
ungroup()%>%
mutate(p = value / n)
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% select(species,hatchery_location_code,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,hatchery_location_code,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,hatchery_location_code,run,variable)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% select(species,hatchery_location_code,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,hatchery_location_code,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,hatchery_location_code,run)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% select(species,release_location_rmis_basin,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,hatchery_location_code,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,hatchery_location_code,run)%>%
mutate(p = n / sum(value))
d <- dat %>% select(species,release_location_rmis_basin,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,hatchery_location_code,run)%>%
mutate(p = n / sum(value))
d <- dat %>% select(species,release_location_rmis_basin,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"hatchery_location_code","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
d <- dat %>% select(species,release_location_rmis_basin,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% select(species,release_location_rmis_basin,run ,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat %>% select(species,release_location_rmis_region,run,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat %>% filter(species %in% c(1,2))
select(species,release_location_rmis_basin,run,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat %>% filter(species %in% c(1,2))%>%
select(species,release_location_rmis_basin,run,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat %>% filter(species %in% c(1,2))%>%
select(species,release_location_rmis_basin,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin","run"))%>%
group_by(species,release_location_rmis_basin,run,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin,run)%>%
mutate(p = n / sum(value))
dat <- read.csv("~/github/RMIS data/ExpectedAnglersMetric/releases/2018.csv")
library(dplyr)
d <- dat %>% filter(species %in% c(1,2))%>%
select(species,release_location_rmis_basin,
tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
mutate(tagged = tagged_adclipped+tagged_unclipped,
untagged = untagged_unclipped+untagged_adclipped+untagged_unknown)%>%
select(-tagged_adclipped,-tagged_unclipped,-untagged_unclipped,
-untagged_adclipped,-untagged_unknown)%>%
reshape2::melt(id.var = c("tag_code_or_release_id", "species",
"release_location_rmis_basin"))%>%
group_by(species,release_location_rmis_basin,variable)%>%
mutate(n = sum(value))%>%
ungroup()%>%
group_by(species,release_location_rmis_basin)%>%
mutate(p = n / sum(value))
library(ggplot2)
ggplot(d,aes(x = p, fill = variable))+
geom_histogram()
d <- dat %>% filter(species %in% c(1,2))%>%
select(tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("tag_code_or_release_id"))%>%
summarize(sum(value))
d
d <- dat %>% filter(species %in% c(1,2))%>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
summarize(sum(value))
d
dat %>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
summarize(sum(value))
dat %>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
group_bu(species)%>%
summarize(sum(value))
dat %>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
group_by(species)%>%
summarize(sum(value))
dat %>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
group_by(species)%>%
summarize(N = sum(value))
dat %>%
select(species, tag_code_or_release_id,tagged_adclipped,
tagged_unclipped,untagged_unclipped,
untagged_adclipped,untagged_unknown ) %>%
reshape2::melt(id.var = c("species", "tag_code_or_release_id"))%>%
#group_by(species)%>%
summarize(N = sum(value))
